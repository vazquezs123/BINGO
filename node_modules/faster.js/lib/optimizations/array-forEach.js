'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _utils = require('../utils');

/**
 * Returns a visitor that rewrites array.forEach() calls as a for loop.
 *
 * Only supports 1 argument:
 *     arr.forEach(f); // valid call with 1 argument
 *     arr.forEach(f, this); // unsupported call with 2 arguments
 */
exports.default = function (t) {
	return {
		ExpressionStatement(path, state) {
			var expression = path.node.expression;

			if (!(0, _utils.isMethodCall)(t, expression, 'forEach') || expression.arguments.length !== 1) {
				return;
			}

			var func = (0, _utils.extractDynamicFuncIfNeeded)(t, path.get('expression'), path);

			var array = (0, _utils.defineIdIfNeeded)(t, path.get('expression.callee.object'), path);
			var i = path.scope.generateUidIdentifier('i');

			var forBody = t.blockStatement([t.expressionStatement(t.callExpression(func, [t.memberExpression(array, i, true), i, array]))]);

			path.replaceWith((0, _utils.basicArrayForLoop)(t, i, array, forBody));
		}
	};
};